import tkinter as tk
from tkinter import ttk
import math

def evaluate_expression():
    try:
        result = eval(entry.get())
        entry.delete(0, tk.END)
        entry.insert(tk.END, str(result))
    except Exception as e:
        entry.delete(0, tk.END)
        entry.insert(tk.END, "Erro")

def button_click(event):
    entry.insert(tk.END, event.widget.cget("text"))

def clear_entry():
    entry.delete(0, tk.END)

def calculate_moment():
    try:
        force = float(force_entry.get())
        distance = float(distance_entry.get())
        moment = force * distance
        moment_entry.delete(0, tk.END)
        moment_entry.insert(tk.END, str(moment))
    except Exception as e:
        moment_entry.delete(0, tk.END)
        moment_entry.insert(tk.END, "Erro")

def calculate_area():
    try:
        length = float(length_entry.get())
        width = float(width_entry.get())
        area = length * width
        area_entry.delete(0, tk.END)
        area_entry.insert(tk.END, str(area))
    except Exception as e:
        area_entry.delete(0, tk.END)
        area_entry.insert(tk.END, "Erro")

root = tk.Tk()
root.title("Calculadora de Engenharia")

# Entrada para exibir os números e o resultado
entry = tk.Entry(root, width=50)
entry.grid(row=0, column=0, columnspan=4)

# Botões numéricos e operadores
buttons = [
    ('7', 1, 0), ('8', 1, 1), ('9', 1, 2), ('/', 1, 3),
    ('4', 2, 0), ('5', 2, 1), ('6', 2, 2), ('*', 2, 3),
    ('1', 3, 0), ('2', 3, 1), ('3', 3, 2), ('-', 3, 3),
    ('0', 4, 0), ('.', 4, 1), ('=', 4, 2), ('+', 4, 3)
]

for (text, row, column) in buttons:
    button = ttk.Button(root, text=text)
    button.grid(row=row, column=column, sticky="nsew")
    button.bind("<Button-1>", button_click)

# Botões de funções adicionais
functions = [
    ('C', 5, 0), ('√', 5, 1), ('sin', 5, 2), ('cos', 5, 3),
    ('tan', 6, 0), ('log', 6, 1), ('ln', 6, 2), ('^', 6, 3),
    ('Momento Fletor', 7, 0), ('Área', 7, 1)
]

for (text, row, column) in functions:
    button = ttk.Button(root, text=text)
    button.grid(row=row, column=column, sticky="nsew")
    button.bind("<Button-1>", button_click if text != 'C' and text != "Momento Fletor" and text != "Área" else (lambda event: clear_entry() if text == 'C' else (lambda event: calculate_moment() if text == 'Momento Fletor' else lambda event: calculate_area())))

# Botão para avaliar a expressão
equal_button = ttk.Button(root, text="=", command=evaluate_expression)
equal_button.grid(row=4, column=2, columnspan=2, sticky="nsew")

# Entradas para cálculo do momento fletor
force_entry = tk.Entry(root, width=10)
force_entry.grid(row=7, column=1, sticky="nsew")
force_label = tk.Label(root, text="Força (N):")
force_label.grid(row=7, column=0, sticky="nsew")
distance_entry = tk.Entry(root, width=10)
distance_entry.grid(row=8, column=1, sticky="nsew")
distance_label = tk.Label(root, text="Distância (m):")
distance_label.grid(row=8, column=0, sticky="nsew")
moment_entry = tk.Entry(root, width=20)
moment_entry.grid(row=7, column=2, columnspan=2, sticky="nsew")
moment_label = tk.Label(root, text="Momento (N*m):")
moment_label.grid(row=7, column=4, sticky="nsew")

# Entradas para cálculo da área
length_entry = tk.Entry(root, width=10)
length_entry.grid(row=10, column=1, sticky="nsew")
length_label = tk.Label(root, text="Comprimento (m):")
length_label.grid(row=10, column=0, sticky="nsew")
width_entry = tk.Entry(root, width=10)
width_entry.grid(row=11, column=1, sticky="nsew")
width_label = tk.Label(root, text="Largura (m):")
width_label.grid(row=11, column=0, sticky="nsew")
area_entry = tk.Entry(root, width=20)
area_entry.grid(row=10, column=2, columnspan=2, sticky="nsew")
area_label = tk.Label(root, text="Área (m²):")
area_label.grid(row=10, column=4, sticky="nsew")

root.mainloop()
